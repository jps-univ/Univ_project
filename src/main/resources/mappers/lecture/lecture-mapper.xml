<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lectureMapper">
    <!--    과목의 리절트맵-->
    <resultMap id="lectureMap" type="Lecture">
        <id property="classSeq" column="CLASS_SEQ"/>
        <result property="classCode" column="CLASS_CODE"/>
        <result property="deptCode" column="DEPARTMENT_CODE"/>
        <result property="profId" column="PROFESSOR_ID"/>
        <result property="className" column="CLASS_NAME"/>
        <result property="room" column="ROOM"/>
        <result property="gradeSize" column="GRADE_SIZE"/>
        <result property="classSemester" column="CLASS_SEMESTER"/>
        <result property="classYear" column="CLASS_YEAR"/>
        <result property="classApprove" column="CLASS_APPROVE"/>
        <result property="classLevel" column="CLASS_LEVEL"/>
        <result property="classType" column="CLASS_TYPE"/>

        <result property="classBook" column="CLASS_BOOK"/>
        <result property="classTarget" column="CLASS_TARGET"/>
        <result property="classOutline" column="CLASS_OUTLINE"/>

        <result property="lectureTime" column="TOTAL"/>
        <result property="profName" column="PROFESSOR_NAME"/>
    </resultMap>
    <!--    강의시간 리절트맵-->
    <resultMap id="lectureTimeMap" type="LectureTime">
        <id property="ctSeq" column="CLASS_TIME_SEQ"/>
        <result property="classSeq" column="CLASS_SEQ"/>
        <result property="day" column="DAY"/>
        <result property="hour" column="HOUR"/>
        <result property="dayHour" column="DAY_HOUR"/>
    </resultMap>
<!--    강의등록리절트맵-->
    <resultMap id="registerMap" type="LectureApplication">
        <id property="registerSeq" column="REGISTER_SEQ"/>
        <result property="stdId" column="STUDENT_ID"/>
        <result property="classSeq" column="CLASS_SEQ"/>
    </resultMap>

    <select id="selectClassTime" resultMap="lectureMap" parameterType="com.kh.univ.lecture.model.vo.SearchCondition">
        SELECT a.CLASS_SEQ,
               a.CLASS_NAME,
               c.DEPARTMENT_NAME AS DEPARTMENT_CODE,
               d.NAME            AS PROFESSOR_NAME,
               subquery1.total,
               a.ROOM,
               a.CLASS_TYPE,
               a.GRADE_SIZE,
               a.CLASS_LEVEL
        FROM TB_CLASS a,
             (SELECT CLASS_SEQ, LISTAGG(CONCAT(DAY, HOUR), '/') WITHIN GROUP (ORDER BY CLASS_TIME_SEQ ) AS total
              FROM TB_CLASS_TIME b
              GROUP BY CLASS_SEQ) subquery1,
             TB_DEPARTMENT c,
             TB_PROFESSOR d
        WHERE subquery1.CLASS_SEQ = a.CLASS_SEQ
          AND a.DEPARTMENT_CODE = c.DEPARTMENT_CODE
          AND a.PROFESSOR_ID = d.PROFESSOR_ID
          AND a.CLASS_APPROVE = 'Y'
          AND a.CLASS_YEAR = #{classYear}
          AND a.CLASS_SEMESTER = #{classSemester}
         <if test="!classType.equals('전체')">
            AND a.CLASS_TYPE = #{classType}
         </if>
        <if test="inputClassName != null">
            AND a.CLASS_NAME LIKE '%'|| #{inputClassName} || '%'
        </if>
        <if test="classLevel != 0">
            AND a.CLASS_LEVEL = #{classLevel}
        </if>
        <if test="!collegeCode.equals('c0')">
            AND c.COLLEGE_CODE = #{collegeCode}
        </if>
        <if test="!departmentName.equals('전체')">
            AND c.DEPARTMENT_NAME=#{departmentName}
        </if>
        <if test="!className.equals('전체')">
            AND a.CLASS_NAME = #{className}
        </if>
    </select>
    <select id="selectMajor" resultMap="lectureMap" parameterType="Lecture">
        SELECT a.CLASS_NAME
        FROM TB_CLASS a, TB_DEPARTMENT b
        WHERE a.DEPARTMENT_CODE=b.DEPARTMENT_CODE AND b.DEPARTMENT_NAME=#{className}
        AND a.CLASS_APPROVE = 'Y'
    </select>
    <select id="selectDept" resultMap="lectureMap" parameterType="Lecture">
        SELECT DEPARTMENT_NAME AS DEPARTMENT_CODE
        FROM TB_DEPARTMENT
        WHERE COLLEGE_CODE = #{collegeCode}
    </select>
<!--    시간표 중복확인을 위해 내 현재 수강신청 시간표를 가져옴.-->
    <select id="selectDayHour" resultMap="lectureTimeMap" parameterType="Lecture">
        SELECT CONCAT(DAY,HOUR) AS DAY_HOUR
        FROM  TB_REGISTER_CLASS a,TB_CLASS_TIME b, TB_CLASS c
        WHERE a.CLASS_SEQ=b.CLASS_SEQ
          AND a.CLASS_SEQ = c.CLASS_SEQ
          AND a.STUDENT_ID=#{stdId}
          AND c.CLASS_YEAR = #{classYear}
          AND c.CLASS_SEMESTER = #{classSemester}
    </select>
    <!--    시간표 중복확인을 위해 클래스타임테이블에서 해당과목의 시간표를 가져옴 -->
    <select id="selectDayHour2" resultMap="lectureTimeMap" parameterType="Lecture">
        SELECT CONCAT(DAY,HOUR) AS DAY_HOUR
        FROM TB_CLASS_TIME
        WHERE CLASS_SEQ=#{classSeq}
    </select>
<!--    장바구니도 시간표중복확인을 해야함-->
    <select id="selectDayHourBasket" resultMap="lectureTimeMap" parameterType="Lecture">
        SELECT CONCAT(DAY,HOUR) AS DAY_HOUR
        FROM  TB_BASKET_CLASS a,TB_CLASS_TIME b, TB_CLASS c
        WHERE a.CLASS_SEQ=b.CLASS_SEQ
          AND a.CLASS_SEQ = c.CLASS_SEQ
          AND a.STUDENT_ID=#{stdId}
          AND c.CLASS_YEAR = #{classYear}
          AND c.CLASS_SEMESTER = #{classSemester}
    </select>
<!--   수강신청테이블에 넣음 -->
    <insert id="insertRegisterClass" parameterType="LectureApplication">
        INSERT INTO TB_REGISTER_CLASS
        VALUES (SEQ_REGISTER_CLASS.nextval, #{stdId},#{classSeq})
    </insert>
<!--    장바구니테이블에 넣음 -->
    <insert id="insertBasketClass" parameterType="LectureApplication">
        INSERT INTO TB_BASKET_CLASS
        VALUES (SEQ_BASKET_CLASS.nextval, #{stdId},#{classSeq})
    </insert>
<!--    내 수강신청 테이블에서 데이터 가져옴 -->
    <select id="selectMyTime" resultMap="lectureMap" parameterType="Lecture">
        SELECT a.CLASS_SEQ,
               a.CLASS_NAME,
               c.DEPARTMENT_NAME AS DEPARTMENT_CODE,
               d.NAME            AS PROFESSOR_NAME,
               subquery1.total,
               a.ROOM,
               a.CLASS_TYPE,
               a.GRADE_SIZE,
               a.CLASS_LEVEL
        FROM TB_CLASS a,
             (SELECT CLASS_SEQ, LISTAGG(CONCAT(DAY, HOUR), '/') WITHIN GROUP (ORDER BY CLASS_TIME_SEQ ) AS total
              FROM TB_CLASS_TIME b
              GROUP BY CLASS_SEQ) subquery1,
             TB_DEPARTMENT c,
             TB_PROFESSOR d,
             TB_REGISTER_CLASS e
        WHERE subquery1.CLASS_SEQ = a.CLASS_SEQ
          AND a.CLASS_SEQ = e.CLASS_SEQ
          AND a.DEPARTMENT_CODE = c.DEPARTMENT_CODE
          AND a.PROFESSOR_ID = d.PROFESSOR_ID
          AND e.STUDENT_ID = #{stdId}
          AND a.CLASS_APPROVE = 'Y'
          AND a.CLASS_YEAR = #{classYear}
          AND a.CLASS_SEMESTER = #{classSemester}
    </select>
<!--    장바구니테이블에서 데이터 뽑아옴-->
    <select id="selectMyBasket" resultMap="lectureMap" parameterType="Lecture">
        SELECT a.CLASS_SEQ,
               a.CLASS_NAME,
               c.DEPARTMENT_NAME AS DEPARTMENT_CODE,
               d.NAME            AS PROFESSOR_NAME,
               subquery1.total,
               a.ROOM,
               a.CLASS_TYPE,
               a.GRADE_SIZE,
               a.CLASS_LEVEL
        FROM TB_CLASS a,
             (SELECT CLASS_SEQ, LISTAGG(CONCAT(DAY, HOUR), '/') WITHIN GROUP (ORDER BY CLASS_TIME_SEQ ) AS total
              FROM TB_CLASS_TIME b
              GROUP BY CLASS_SEQ) subquery1,
             TB_DEPARTMENT c,
             TB_PROFESSOR d,
             TB_BASKET_CLASS e
        WHERE subquery1.CLASS_SEQ = a.CLASS_SEQ
          AND a.CLASS_SEQ = e.CLASS_SEQ
          AND a.DEPARTMENT_CODE = c.DEPARTMENT_CODE
          AND a.PROFESSOR_ID = d.PROFESSOR_ID
          AND e.STUDENT_ID = #{stdId}
          AND a.CLASS_APPROVE = 'Y'
          AND a.CLASS_YEAR = #{classYear}
          AND a.CLASS_SEMESTER = #{classSemester}
    </select>
<!--    내 수강신청에서 삭제 -->
    <delete id="deleteMyClass" parameterType="LectureApplication">
        DELETE FROM TB_REGISTER_CLASS WHERE STUDENT_ID=#{stdId} AND CLASS_SEQ=#{classSeq}
    </delete>
<!--    내 장바구니에서 삭제-->
    <delete id="deleteMyBasket" parameterType="LectureApplication">
        DELETE FROM TB_BASKET_CLASS WHERE STUDENT_ID=#{stdId} AND CLASS_SEQ=#{classSeq}
    </delete>

<!--    과목코드 중복방지를 위한 쿼리문-->
    <select id="codeCheck" parameterType="string" resultType="_int">
        SELECT COUNT(*)
        FROM TB_CLASS
        WHERE CLASS_CODE=#{classCode}
    </select>
<!--    교수 강의등록요청할때 승인상태를 Y Wait (웨이트) 으로 해서 디비에넣음-->
    <insert id="requestRegisterClass" parameterType="Lecture">
        INSERT INTO TB_CLASS
        VALUES (SEQ_CLASS.nextval,#{classCode},#{deptCode},#{profId},#{className},#{room},#{gradeSize},#{classSemester},#{classYear},'YW',#{classLevel},#{classType},null,null,null)
    </insert>
<!--    클래스시퀀스를 가져와서 거기에 맞는 시간표를 함께 넣기위함-->
    <select id="selectClassSeq" parameterType="string" resultType="_int">
        SELECT CLASS_SEQ
        FROM TB_CLASS
        WHERE CLASS_CODE=#{classCode}
    </select>
<!--    교수가 강의등록할때 함께 넣은 시간표를 디비에 넣어줌-->
    <insert id="insertClassTime" parameterType="LectureTime">
        INSERT INTO TB_CLASS_TIME VALUES (SEQ_CLASS_TIME.nextval,#{classSeq},#{day},#{hour})
    </insert>

<!--    교수가 강의삭제요청할 데이터를 뽑아옴-->
    <select id="getDeleteTable" resultMap="lectureMap">
        SELECT CLASS_SEQ, CLASS_CODE, CLASS_NAME, ROOM, CLASS_TYPE, CLASS_YEAR, CLASS_SEMESTER, CLASS_APPROVE
        FROM TB_CLASS
        WHERE PROFESSOR_ID=#{profId}
        AND (CLASS_APPROVE = 'Y' OR CLASS_APPROVE = 'YW')
    </select>
<!--    교수가 삭제요청하면 상태값을 DW로 요청-->
    <update id="requestDeleteClass" parameterType="Lecture">
        UPDATE TB_CLASS SET CLASS_APPROVE='DW'
        WHERE CLASS_SEQ = #{classSeq}
    </update>
    <update id="updateAdditional" parameterType="Lecture">
        UPDATE TB_CLASS
            <set>
                <if test="classOutline != null">CLASS_OUTLINE = #{classOutline},</if>
                <if test="classTarget != null">CLASS_TARGET = #{classTarget},</if>
                <if test="classBook != null">CLASS_BOOK = #{classBook}</if>
            </set>
        WHERE CLASS_SEQ = #{classSeq}
    </update>
    <insert id="insertPlan" parameterType="AdClassPlan">
        INSERT INTO CLASS_PLAN VALUES (SEQ_CLASS_PLAN.nextval,#{classSeq},#{week},#{weekPlan},#{topic})
    </insert>
</mapper>